package com.company;

public class third {
    public static void main(String[] args) {
        int z = 5 + 2 / 8 ;
        System.out.println(z);
        // Первой выполняется операция деления, т.к. она выше приоритетом, затем сложение. Результат деления дробное число,
        // т.к. int это целочисленный тип дробная часть отображаться не будет и мы получим результат 5;

        int x = (5+2) / 8;
        System.out.println(x);
        // Вначале выполняем действие в скобках, т.к. оно приоритетнее, затем деление. Резултом будет 0, т.к. задана
        // переменная целочисленного типа int

        int  w = 2;
        w ++;
        int c  = (5 + w) / 8;
        System.out.println(c);
        // Первым выполняем постинкремент числа 2, затем сложение (т.к. действие в скобках), = 8. Затем делим результат
        // сложения в скобках на 8, получаем 1

        int e = 8;
        --e;
        int l = (5 + w) / e;
        System.out.println(l);
        // выполняем первым постинкремент числа 2, после выполняем действие в скобках (5+3), после делим
        // результат 8 на предекремент 8 (7), получается 1, т.к. задана переменная целочисленного типа;

        int u = (5 * 2 >> w) / e;
        System.out.println(u);
        //Вначале выполняем действие в скобках слева направа: умножаем 5 на 2 и сдвигаем на три бита вправо получается 1
        // 1 разделить на 7 получается 0, т.к. задана переменная целочисленного типа int

        int t = (5 + 7 > 20 ? 68 : 22 * 2 >> w) / e;
        System.out.println(t);
        // вначале в скобках выполняем умножение, затем сложение, затем выполняем преинкремент числа 2 (получаем 3), сдвигаем
        // на 3 знака вправо 44 >> 3, получаем 5, затем выполняем тернарный оператор, значение 5+7 >20 = false, значит результат
        // выражения в скобках 5. 5 / 7 = 0, так как задана переменная с целочисленным типом.

        int k = (5 + 7 > 20 ? 68 => 68 : 22 * 2 >> w) / e;
        System.out.println(k);
        // результат ошибка компиляции

        boolean y = 6 - 2 > 3 && 12 * 12 <= 119;
        System.out.println(y);
        // вначале выполняем умножение (получаем 144), затем вычитание (получаем 4), затем выполняем логические операторы
        //слева на право получаем true, как результат выражения 4>3, затем проверяем 144<119, результат всего выражения false,
        //т.к. один из операндов равен false


        boolean q = true && false;
        System.out.println(q);
        // Значение выражения false, т.к. один из операндов имеет значение false.


    }
}
